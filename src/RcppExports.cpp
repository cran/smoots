// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fcastCpp
arma::vec fcastCpp(const arma::vec& X, const arma::vec& innov, const arma::rowvec& ar, const arma::rowvec& ma, const double mu, const int h);
RcppExport SEXP _smoots_fcastCpp(SEXP XSEXP, SEXP innovSEXP, SEXP arSEXP, SEXP maSEXP, SEXP muSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type innov(innovSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type ar(arSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type ma(maSEXP);
    Rcpp::traits::input_parameter< const double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const int >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(fcastCpp(X, innov, ar, ma, mu, h));
    return rcpp_result_gen;
END_RCPP
}
// tfcastCpp
arma::vec tfcastCpp(const arma::vec& X, const arma::vec& innov, const arma::vec& epsBoot, const arma::rowvec& ar, const arma::rowvec& ma, const double mu, const int h);
RcppExport SEXP _smoots_tfcastCpp(SEXP XSEXP, SEXP innovSEXP, SEXP epsBootSEXP, SEXP arSEXP, SEXP maSEXP, SEXP muSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type innov(innovSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type epsBoot(epsBootSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type ar(arSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type ma(maSEXP);
    Rcpp::traits::input_parameter< const double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const int >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(tfcastCpp(X, innov, epsBoot, ar, ma, mu, h));
    return rcpp_result_gen;
END_RCPP
}
// cf0Cpp
List cf0Cpp(const NumericVector Xt);
RcppExport SEXP _smoots_cf0Cpp(SEXP XtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type Xt(XtSEXP);
    rcpp_result_gen = Rcpp::wrap(cf0Cpp(Xt));
    return rcpp_result_gen;
END_RCPP
}
// gsmoothCalcCpp
arma::vec gsmoothCalcCpp(const arma::vec& y, const int v, const int p, const int mu, const double b, const int bb);
RcppExport SEXP _smoots_gsmoothCalcCpp(SEXP ySEXP, SEXP vSEXP, SEXP pSEXP, SEXP muSEXP, SEXP bSEXP, SEXP bbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const int >::type v(vSEXP);
    Rcpp::traits::input_parameter< const int >::type p(pSEXP);
    Rcpp::traits::input_parameter< const int >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const int >::type bb(bbSEXP);
    rcpp_result_gen = Rcpp::wrap(gsmoothCalcCpp(y, v, p, mu, b, bb));
    return rcpp_result_gen;
END_RCPP
}
// gsmoothCalc2Cpp
List gsmoothCalc2Cpp(const arma::vec& y, const int v, const int p, const int mu, const double b, const int bb);
RcppExport SEXP _smoots_gsmoothCalc2Cpp(SEXP ySEXP, SEXP vSEXP, SEXP pSEXP, SEXP muSEXP, SEXP bSEXP, SEXP bbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const int >::type v(vSEXP);
    Rcpp::traits::input_parameter< const int >::type p(pSEXP);
    Rcpp::traits::input_parameter< const int >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    Rcpp::traits::input_parameter< const int >::type bb(bbSEXP);
    rcpp_result_gen = Rcpp::wrap(gsmoothCalc2Cpp(y, v, p, mu, b, bb));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_smoots_fcastCpp", (DL_FUNC) &_smoots_fcastCpp, 6},
    {"_smoots_tfcastCpp", (DL_FUNC) &_smoots_tfcastCpp, 7},
    {"_smoots_cf0Cpp", (DL_FUNC) &_smoots_cf0Cpp, 1},
    {"_smoots_gsmoothCalcCpp", (DL_FUNC) &_smoots_gsmoothCalcCpp, 6},
    {"_smoots_gsmoothCalc2Cpp", (DL_FUNC) &_smoots_gsmoothCalc2Cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_smoots(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
